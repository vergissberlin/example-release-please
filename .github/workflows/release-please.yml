on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write

name: Release Please

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runs-on: [foo, bar, moo]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Make a file with a lot of repeated text
        run: |
          for i in {1..1000}; do echo -n '${{ matrix.runs-on }}' >> ${{ matrix.runs-on }}.txt; done
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact-${{ matrix.runs-on }}
          path: ./${{ matrix.runs-on }}.txt
          compression-level: 0 # 9 = maximum compression

  release:
    name: 📦 Release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload-url: ${{ steps.release.outputs.upload_url }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: simple
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Print the release URL if present
        if: ${{ steps.release.outputs.upload_url }}
        run: |
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"

      - uses: actions/download-artifact@v4
        with:
          path: my-artifact
          pattern: my-artifact-*
          merge-multiple: true

      - name: List all files
        run: |
          ls -R my-artifact
          cat my-artifact/foo.txt
          cat my-artifact/bar.txt

      - name: Upload release asset foo
        if: ${{ steps.release.outputs.upload_url }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./my-artifact/foo.txt
          asset_name: foo.txt
          asset_content_type: text/plain

      - name: Upload release asset bar
        if: ${{ steps.release.outputs.upload_url }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./my-artifact/bar.txt
          asset_name: bar.txt
          asset_content_type: text/plain

  upload:
    name: 🚀 Upload Artifacts
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        runs-on: [foo, bar, moo]
    steps:
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: ./my-artifact/${{ matrix.runs-on }}.txt
          asset_name: dirk-${{ matrix.runs-on }}.txt
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
