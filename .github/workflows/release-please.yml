on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write

name: Release Please

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Make a file with a lot of repeated text
        run: |
          for i in {1..10000}; do echo -n 'foobar' >> foobar.txt; done
      - uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: foobar.txt
          compression-level: 0 # 9 = maximum compression

      #- name: Download Artefacts and Upload to Release
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: firmware
      #    path: downloaded-artefacts
      - uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: simple
      - name: Get the release URL
        run: |
          echo "Uploading release asset"
          echo "Release URL: ${{ steps.release.outputs.release_url }}"
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"
          echo "Asset name: ${{ steps.release.outputs.asset_name }}"
          echo "Asset ID: ${{ steps.release.outputs.asset_id }}"
          echo "Asset URL: ${{ steps.release.outputs.asset_url }}"
          echo "Release URLLLLS: ${{ steps.release_url }}"
          echo "Created: ${{ steps.release.outputs.release_created }}"
          echo "Tag name: ${{ steps.release.outputs.tag_name }}"
          ls -lisah


      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: application/markdown

      #- name: Upload Release Artifact
      #  if: ${{ steps.release.outputs.release_created }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: gh release upload ${{ steps.release.outputs.tag_name }} ./foobar.txt ./foobar.txt
