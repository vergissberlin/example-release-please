on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write
  security-events: write
  statuses: write
  packages: write

name: Release Please

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Make a file with a lot of repeated text
        run: |
          for i in {1..1000}; do echo -n 'foo' >> foo.txt; done
          for i in {1..1000}; do echo -n 'bar' >> bar.txt; done
      - uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: foo.txt
          compression-level: 0 # 9 = maximum compression

      #- name: Download Artefacts and Upload to Release
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: firmware
      #    path: downloaded-artefacts
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: simple
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Get the release URL
        run: |
          echo "Release URL: ${{ steps.release.outputs.release_url }}"
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"
          echo "Asset name: ${{ steps.release.outputs.asset_name }}"
          echo "Asset ID: ${{ steps.release.outputs.asset_id }}"
          echo "Asset URL: ${{ steps.release.outputs.asset_url }}"
          echo "FROM UPLAID Asset URL: ${{ steps.create_release.outputs.upload_url }}"
          echo "Created: ${{ steps.release.outputs.release_created }}"
          echo "Tag name: ${{steps.release.outputs.tag_name}}"
          ls -lisah
          echo "Tag: ${{steps.release.outputs.major}}.${{ steps.release.outputs.minor }}"
          echo "ref name:  ${{ github.ref_name }}"
          echo "github:  ${{ github }}"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./foo.txt
          asset_name: foo.txt
          asset_content_type: text/plain

      #- name: Upload Release Artifact
      #  if: ${{ steps.release.outputs.release_created }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: gh release upload ${{ steps.release.outputs.tag_name }} ./foo.txt ./foo.txt
